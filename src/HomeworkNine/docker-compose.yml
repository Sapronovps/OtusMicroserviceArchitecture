version: "3.3"
services:
  zookeeper:
    container_name: zookeeper
    image: wurstmeister/zookeeper
    networks:
      - otus-network
    ports:
      - 2181:2181
  kafka:
    container_name: kafka
    image: wurstmeister/kafka
    ports:
      - 9092:9092
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    networks:
      - otus-network
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper
  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "8084:8080"
    restart: always
    networks:
      - otus-network
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
      - KAFKA_CLUSTERS_0_READONLY=false

# Сервис "Склад"
  warehouse-app:
    #        image: sapronovps/otus-microservice-architecture:hm9-warehouse
    build:
      context: 'WarehouseService/warehouse-app'
      args:
        uid: ${UID}
    container_name: warehouse-app
    ports:
      - 8080:80
    networks:
      - otus-network
#    volumes:
#      - ./WarehouseService/warehouse-app/:/var/www/html
  warehouse-postgres:
    image: postgres:15-alpine
    container_name: warehouse-postgres
    environment:
      POSTGRES_DB: 'warehouse'
      POSTGRES_USER: 'warehouse'
      POSTGRES_PASSWORD: 'warehouse123'
      PGDATA: "/var/lib/postgresql/data/pgdata"
    networks:
      - otus-network
    volumes:
      - warehousedb-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  # Сервис "Доставка"
  delivery-app:
    #        image: sapronovps/otus-microservice-architecture:hm9-delivery
    build:
      context: 'DeliveryService/delivery-app'
      args:
        uid: ${UID}
    container_name: delivery-app
    ports:
      - 8081:80
    networks:
      - otus-network
#    volumes:
#      - ./DeliveryService/delivery-app/:/var/www/html

  delivery-postgres:
    image: postgres:15-alpine
    container_name: delivery-postgres
    environment:
      POSTGRES_DB: 'delivery'
      POSTGRES_USER: 'delivery'
      POSTGRES_PASSWORD: 'delivery123'
      PGDATA: "/var/lib/postgresql/data/pgdata"
    networks:
      - otus-network
    volumes:
      - deliverydb-data:/var/lib/postgresql/data
    ports:
      - "5433:5432"

  # Сервис "Оплаты"
  billing-app:
    #        image: sapronovps/otus-microservice-architecture:hw9-billing
    build:
      context: 'BillingService/billing-app'
      args:
        uid: ${UID}
    container_name: billing-app
    ports:
      - 8082:80
    networks:
      - otus-network
#    volumes:
#      - ./BillingService/billing-app/:/var/www/html
  billing-postgres:
      image: postgres:15-alpine
      container_name: billing-postgres
      environment:
        POSTGRES_DB: 'billing'
        POSTGRES_USER: 'billing'
        POSTGRES_PASSWORD: 'billing123'
        PGDATA: "/var/lib/postgresql/data/pgdata"
      networks:
        - otus-network
      volumes:
        - billingdb-data:/var/lib/postgresql/data
      ports:
        - "5434:5432"
networks:
  otus-network:
    driver: bridge

volumes:
  warehousedb-data:
  deliverydb-data:
  billingdb-data:
